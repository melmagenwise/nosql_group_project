services:
  api_movies_series:
    build: ./api/api_movies_series
    container_name: api_movies_series
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - REDIS_HOST=redis
      - CACHE_TTL_SECONDS=120
      - MOVIES_DATA_FILE=/app/data/movies_data.json
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./api/api_movies_series:/app
      - ./data/movies_data.json:/app/data/movies_data.json:ro

  api_users:
    build: ./api/api_users
    container_name: api_users
    ports:
      - "5004:5004"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - REDIS_HOST=redis
      - CACHE_TTL_SECONDS=120
      - USERS_DATA_FILE=/app/data/users_data.json
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./api/api_users:/app
      - ./data/users_data.json:/app/data/users_data.json:ro
      - /app/node_modules

  api_people:
    build: ./api/api_people
    container_name: api_people
    ports:
      - "5002:5002"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - REDIS_HOST=redis
      - CACHE_TTL_SECONDS=120
      - PEOPLE_DATA_FILE=/app/data/people_data.json
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./api/api_people:/app
      - ./data/people_data.json:/app/data/people_data.json:ro
      - /app/node_modules

  myapp:
    build:
      context: ./myapp
      dockerfile: Dockerfile.dev
    container_name: myapp
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      # These are read by src/setupProxy.js inside the container:
      - MOVIES_API_TARGET=http://api_movies_series:5000
      - PEOPLE_API_TARGET=http://api_people:5002
      - USERS_API_TARGET=http://api_users:5004
    depends_on:
      - api_movies_series
      - api_users
      - api_people
    volumes:
      - ./myapp:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  mongodb:
    image: mongo:7
    container_name: group_movies_series_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      # seed files (optional, if you use them)
      - ./data/movies_data.json:/docker-entrypoint-initdb.d/movies_data.json:ro
      - ./data/people_data.json:/docker-entrypoint-initdb.d/people_data.json:ro
      - ./data/users_data.json:/docker-entrypoint-initdb.d/users_data.json:ro
      - ./scripts/seed_movies_series.js:/docker-entrypoint-initdb.d/seed_movies_series.js:ro
      - ./scripts/seed_users.js:/docker-entrypoint-initdb.d/seed_users.js:ro
      - ./scripts/seed_people.js:/docker-entrypoint-initdb.d/seed_people.js:ro

  redis:
    image: redis:7
    container_name: group_movies_series_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: group_movies_series_redisinsight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/db
    depends_on:
      redis:
        condition: service_healthy

volumes:
  mongo_data:
  redis_data:
  redisinsight_data:
